let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
imap <PageDown> 
imap <PageUp> 
imap <F12> :w:!python %
imap <F8> :bd
imap <F7> :bni
imap <F6> :bpi
imap <F5> :BufExplorer
imap <F4> :NERDTreeToggle
imap <F2> :w!
map! <S-Insert> <MiddleMouse>
vmap  "+yi
map  h
map <NL> j
map  k
map  l
map  a
vmap ,w vl
nmap ,ca <Plug>NERDCommenterAltDelims
vmap ,cA <Plug>NERDCommenterAppend
nmap ,cA <Plug>NERDCommenterAppend
vmap ,c$ <Plug>NERDCommenterToEOL
nmap ,c$ <Plug>NERDCommenterToEOL
vmap ,cu <Plug>NERDCommenterUncomment
nmap ,cu <Plug>NERDCommenterUncomment
vmap ,cn <Plug>NERDCommenterNest
nmap ,cn <Plug>NERDCommenterNest
vmap ,cb <Plug>NERDCommenterAlignBoth
nmap ,cb <Plug>NERDCommenterAlignBoth
vmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cl <Plug>NERDCommenterAlignLeft
vmap ,cy <Plug>NERDCommenterYank
nmap ,cy <Plug>NERDCommenterYank
vmap ,ci <Plug>NERDCommenterInvert
nmap ,ci <Plug>NERDCommenterInvert
vmap ,cs <Plug>NERDCommenterSexy
nmap ,cs <Plug>NERDCommenterSexy
vmap ,cm <Plug>NERDCommenterMinimal
nmap ,cm <Plug>NERDCommenterMinimal
vmap ,c  <Plug>NERDCommenterToggle
nmap ,c  <Plug>NERDCommenterToggle
vmap ,cc <Plug>NERDCommenterComment
nmap ,cc <Plug>NERDCommenterComment
nmap <silent> ,t :CommandT
nmap ,a <Plug>ToggleAutoCloseMappings
nnoremap ,3 I### 
nnoremap ,2 yypVr-
nnoremap ,1 yypVr=
nnoremap ,w vl
nnoremap ,q gqip
nnoremap ,s :SessionList
nmap ,ev sjL:e $MYVIMRC
omap ,w vl
xmap S <Plug>VSurround
nmap [[ :PBoB
vmap [[ :PBoBm'gv``
omap [[ :PBoB
nmap ]] :PEoB
nmap ]< [[V]]<
nmap ]> [[V]]>
map ]<Down> :call PythonNextLine(1)
map ]<Up> :call PythonNextLine(-1)
map ]f :call PythonSelectObject("function")
map ]c :call PythonSelectObject("class")
vmap ]> >
omap ]> [[V]]>
vmap ]< <
omap ]< [[V]]<
map ]v [[V]]
vmap ]] :PEoBm'gv``
omap ]] :PEoB
nnoremap _pd :set ft=python.django
nnoremap _jt :set ft=htmljinja
nnoremap _ht :set ft=html
nnoremap _dt :set ft=htmldjango
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
nmap <PageDown> 
nmap <PageUp> 
vmap <F12> :w:!python %
nmap <F12> :w:!python %
vmap <F8> :bd
nmap <F8> :bd
vmap <F7> :bni
nmap <F7> :bn
vmap <F6> :bpi
nmap <F6> :bp
vmap <F5> :BufExplorer
nmap <F5> :BufExplorer
vmap <F4> :NERDTreeToggle
nmap <F4> :NERDTreeToggle
vmap <F2> :w!
nmap <F2> :w!
map <S-Insert> <MiddleMouse>
imap S <Plug>ISurround
imap s <Plug>Isurround
imap 	 =InsertTabWrapper()
imap  <Plug>Isurround
imap  "+gPi
inoremap  =GetCloseTag()
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoindent
set background=dark
set backspace=indent,eol,start
set complete=.,b
set completeopt=menu,longest
set expandtab
set fileencodings=utf-8,cp1251,koi8-r,cp866
set gdefault
set guifont=DejaVu\ Sans\ Mono\ 11
set guioptions=agitc
set helplang=en,ru
set hidden
set history=1000
set ignorecase
set incsearch
set langmenu=en,ru
set laststatus=2
set modelines=0
set mouse=a
set mousemodel=popup
set path=.,/usr/include,,,/usr/local/lib/python2.6/dist-packages/pip-0.8.1-py2.6.egg,/usr/local/lib/python2.6/dist-packages/svarga-0.1-py2.6.egg,/usr/local/lib/python2.6/dist-packages,/usr/lib/python2.6,/usr/lib/python2.6/plat-linux2,/usr/lib/python2.6/lib-tk,/usr/lib/python2.6/lib-dynload,/usr/lib/python2.6/dist-packages,/usr/lib/python2.6/dist-packages/PIL,/usr/lib/python2.6/dist-packages/gst-0.10,/usr/lib/pymodules/python2.6,/usr/lib/python2.6/dist-packages/gtk-2.0,/usr/lib/pymodules/python2.6/gtk-2.0
set printoptions=paper:letter
set ruler
set runtimepath=~/.vim,~/.vim/bundle/AutoClose,~/.vim/bundle/bufexplorer.zip,~/.vim/bundle/closetag.vim,~/.vim/bundle/Command-T,~/.vim/bundle/django.vim,~/.vim/bundle/less,~/.vim/bundle/Markdown,~/.vim/bundle/nerdcommenter,~/.vim/bundle/nerdtree,~/.vim/bundle/pyflakes-pathogen,~/.vim/bundle/python.vim,~/.vim/bundle/python.vim--Vasiliev,~/.vim/bundle/Session-manager,~/.vim/bundle/sessionman.vim,~/.vim/bundle/sessions.vim,~/.vim/bundle/snipMate,~/.vim/bundle/surround.vim,~/.vim/bundle/taglist.vim,~/.vim/bundle/vim-bundle-sparkup,~/.vim/bundle/vim-repeat,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim72,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after,~/.vim/vundle/
set shiftwidth=4
set showcmd
set showmatch
set smartcase
set smartindent
set smarttab
set softtabstop=4
set statusline=%<\ %n:%F%h%m%r%h%w%y\ %=[%{&fileencoding}][%lx%c:%L]--%P--%0([%{strftime(\"%H:%M\")}]%)
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set noswapfile
set tabstop=4
set termencoding=utf-8
set wildignore=*.pyc
set wildmenu
set window=40
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/hg/rcro/templates
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +47 ~/hg/rcro/entries/models.py
badd +21 ~/hg/rcro/entries/admin.py
badd +20 ~/hg/rcro/add_news
badd +90 ~/hg/rcro/entries/views.py
badd +11 ~/hg/rcro/entries/templatetags/entries_filters.py
badd +5 ~/hg/rcro/templates/entries/_categories_menu.html
badd +16 ~/hg/rcro/templates/entries/_listing.html
badd +195 ~/hg/rcro/media/css/style.less
badd +9 ~/hg/rcro/links/models.py
badd +11 ~/hg/rcro/links/admin.py
badd +12 ~/hg/rcro/templates/entries/_pagination.html
badd +36 ~/hg/rcro/templates/_base.html
badd +11 ~/hg/rcro/templates/_menu.html
badd +11 ~/hg/rcro/templates/_header.html
badd +5 ~/hg/rcro/templates/entries/index.html
badd +10 ~/hg/rcro/entries/urls.py
badd +10 ~/hg/rcro/templates/entries/archive.html
badd +32 ~/hg/rcro/urls.py
badd +1 ~/hg/rcro/media/css/style.css
badd +15 ~/hg/rcro/templates/entries/post.html
badd +16 ~/hg/rcro/templates/entries/_post_pagination.html
badd +13 ~/hg/rcro/entries/templatetags/orm_debug.py
badd +17 ~/hg/rcro/stuff/custom_middleware.py
badd +9 ~/hg/rcro/context_processors.py
badd +1 /var/www/wordpress/wp-content/themes/rcro/style.css
badd +243 /var/www/wordpress/wp-content/themes/rcro/rcro.css
badd +11 ~/hg/rcro/templates/pages/parrent_default.html
badd +17 ~/hg/rcro/templates/pages/page_default.html
badd +8 ~/hg/rcro/templates/flatpages/default.html
badd +35 /var/www/wordpress/wp-content/themes/rcro/header.php
badd +415 /var/www/wordpress/wp-content/themes/rcro/rcro.less
badd +1 ~/hg/rcro/header/models.py
badd +8 ~/hg/rcro/header/admin.py
badd +17 ~/hg/rcro/header/templatetags/header.py
badd +170 ~/hg/rcro/settings.py
badd +26 ~/hg/rcro/dashboard.py
silent! argdel *
edit ~/hg/rcro/entries/admin.py
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 63 + 70) / 141)
exe 'vert 2resize ' . ((&columns * 77 + 70) / 141)
argglobal
noremap <buffer> <silent>  :PyflakesUpdate
noremap <buffer> <silent> dw dw:PyflakesUpdate
noremap <buffer> <silent> dd dd:PyflakesUpdate
noremap <buffer> <silent> u u:PyflakesUpdate
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:XCOMM,n:>,fb:-
setlocal commentstring=#%s
setlocal complete=.,b
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'python'
setlocal filetype=python
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=^\\s*\\(from\\|import\\)
setlocal includeexpr=substitute(v:fname,'\\.','/','g')
setlocal indentexpr=GetPythonIndent(v:lnum)
setlocal indentkeys=0{,0},:,!^F,o,O,e,<:>,=elif,=except
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=pydoc
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=pythoncomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.py
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'python'
setlocal syntax=python
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 14 - ((13 * winheight(0) + 19) / 39)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
14
normal! 0
wincmd w
argglobal
edit ~/hg/rcro/templates/_header.html
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal comments=s:<!--,m:\ \ \ \ ,e:-->
setlocal commentstring=<!--%s-->
setlocal complete=.,b
setlocal completefunc=
setlocal nocopyindent
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'html'
setlocal filetype=html
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=HtmlIndentGet(v:lnum)
setlocal indentkeys=o,O,*<Return>,<>>,{,}
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:],<:>
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=htmlcomplete#CompleteTags
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'html'
setlocal syntax=html
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 15 - ((14 * winheight(0) + 19) / 39)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
15
normal! 01l
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 63 + 70) / 141)
exe 'vert 2resize ' . ((&columns * 77 + 70) / 141)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
