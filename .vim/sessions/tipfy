let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
imap <D-BS> 
imap <M-BS> 
imap <M-Down> }
inoremap <D-Down> <C-End>
imap <M-Up> {
inoremap <D-Up> <C-Home>
noremap! <M-Right> <C-Right>
noremap! <D-Right> <End>
noremap! <M-Left> <C-Left>
noremap! <D-Left> <Home>
inoremap <silent> <S-Tab> =BackwardsSnippet()
inoremap <silent> <F3> =TriggerSnippet()
inoremap <silent> <Plug>NERDCommenterInInsert  <BS>:call NERDComment(0, "insert")
imap <PageDown> 
imap <PageUp> 
imap <F12> :w:!python %
imap <F8> :bd
imap <C-Right> :bni
imap <C-Left> :bpi
imap <F5> :BufExplorer
imap <F4> :NERDTreeToggle
imap <F2> :w!
map! <D-v> *
vmap  "+yi
map  h
map <NL> j
map  k
map  l
snoremap  b<BS>
map  a
snoremap % b<BS>%
snoremap ' b<BS>'
vmap ,w vl
nmap <silent> ,ssl <Plug>SnippetsListSnippets
nmap <silent> ,ssd <Plug>SnippetsDeleteSnippet
nmap <silent> ,sse <Plug>SnippetsEditSnippet
nmap <silent> ,ssP <Plug>SnippetsInsertSnippet
nmap <silent> ,ssp <Plug>SnippetsAppendSnippet
vmap <silent> ,ssa <Plug>SnippetsAddSnippet
nmap <silent> ,ssa <Plug>SnippetsAddSnippet
nmap <silent> ,t :CommandT
nmap ,a <Plug>ToggleAutoCloseMappings
nmap ,ca <Plug>NERDCommenterAltDelims
vmap ,cA <Plug>NERDCommenterAppend
nmap ,cA <Plug>NERDCommenterAppend
vmap ,c$ <Plug>NERDCommenterToEOL
nmap ,c$ <Plug>NERDCommenterToEOL
vmap ,cu <Plug>NERDCommenterUncomment
nmap ,cu <Plug>NERDCommenterUncomment
vmap ,cn <Plug>NERDCommenterNest
nmap ,cn <Plug>NERDCommenterNest
vmap ,cb <Plug>NERDCommenterAlignBoth
nmap ,cb <Plug>NERDCommenterAlignBoth
vmap ,cl <Plug>NERDCommenterAlignLeft
nmap ,cl <Plug>NERDCommenterAlignLeft
vmap ,cy <Plug>NERDCommenterYank
nmap ,cy <Plug>NERDCommenterYank
vmap ,ci <Plug>NERDCommenterInvert
nmap ,ci <Plug>NERDCommenterInvert
vmap ,cs <Plug>NERDCommenterSexy
nmap ,cs <Plug>NERDCommenterSexy
vmap ,cm <Plug>NERDCommenterMinimal
nmap ,cm <Plug>NERDCommenterMinimal
vmap ,c  <Plug>NERDCommenterToggle
nmap ,c  <Plug>NERDCommenterToggle
vmap ,cc <Plug>NERDCommenterComment
nmap ,cc <Plug>NERDCommenterComment
nnoremap ,3 I### 
nnoremap ,2 yypVr-
nnoremap ,1 yypVr=
nnoremap ,w vl
nnoremap ,q gqip
nnoremap ,r :FufBuffer
nnoremap ,s :SessionList
nmap ,ev sjL:e $MYVIMRC
omap ,w vl
xmap S <Plug>VSurround
snoremap U b<BS>U
nmap [[ :PBoB
vmap [[ :PBoBm'gv``
omap [[ :PBoB
snoremap \ b<BS>\
nmap ]] :PEoB
nmap ]< [[V]]<
nmap ]> [[V]]>
map ]<Down> :call PythonNextLine(1)
map ]<Up> :call PythonNextLine(-1)
map ]f :call PythonSelectObject("function")
map ]c :call PythonSelectObject("class")
vmap ]> >
omap ]> [[V]]>
vmap ]< <
omap ]< [[V]]<
map ]v [[V]]
vmap ]] :PEoBm'gv``
omap ]] :PEoB
snoremap ^ b<BS>^
nnoremap _pd :set ft=python.django
nnoremap _jt :set ft=htmljinja
nnoremap _ht :set ft=html
nnoremap _dt :set ft=htmldjango
snoremap ` b<BS>`
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
xmap s <Plug>Vsurround
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
map <M-Down> }
noremap <D-Down> <C-End>
map <M-Up> {
noremap <D-Up> <C-Home>
noremap <M-Right> <C-Right>
noremap <D-Right> <End>
noremap <M-Left> <C-Left>
noremap <D-Left> <Home>
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
snoremap <silent> <F3> i<Right>=TriggerSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <SNR>55_ListSnippets :ListSnippets
nnoremap <SNR>55_DeleteSnippet :DeleteSnippet
nnoremap <SNR>55_EditSnippet :EditSnippet
nnoremap <SNR>55_InsertSnippet :InsertSnippet
nnoremap <SNR>55_AppendSnippet :AppendSnippet
vnoremap <SNR>55_AddSnippet :AddSnippet
nnoremap <SNR>55_AddSnippet :%AddSnippet
nmap <silent> <Plug>NERDCommenterAppend :call NERDComment(0, "append")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")
vnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")
vnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(1, "nested")
nnoremap <silent> <Plug>NERDCommenterNest :call NERDComment(0, "nested")
vnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(1, "alignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")
vnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(1, "alignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")
vmap <silent> <Plug>NERDCommenterYank :call NERDComment(1, "yank")
nmap <silent> <Plug>NERDCommenterYank :call NERDComment(0, "yank")
vnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(1, "invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment(0, "invert")
vnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(1, "sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment(0, "sexy")
vnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(1, "minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment(0, "minimal")
vnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(1, "toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment(0, "toggle")
vnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(1, "norm")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment(0, "norm")
nmap <PageDown> 
nmap <PageUp> 
vmap <F12> :w:!python %
nmap <F12> :w:!python %
vmap <F8> :bd
nmap <F8> :bd
vmap <C-Right> :bni
nmap <C-Right> :bn
vmap <C-Left> :bpi
nmap <C-Left> :bp
vmap <F5> :BufExplorer
nmap <F5> :BufExplorer
vmap <F4> :NERDTreeToggle
nmap <F4> :NERDTreeToggle
vmap <F2> :w!
nmap <F2> :w!
xmap <BS> "-d
vmap <D-x> "*d
vmap <D-c> "*y
vmap <D-v> "-d"*P
nmap <D-v> "*P
imap S <Plug>ISurround
imap s <Plug>Isurround
imap 	 =InsertTabWrapper()
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
imap  "+gPi
inoremap  =GetCloseTag()
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoindent
set background=dark
set backspace=indent,eol,start
set complete=.,b
set completeopt=menu,longest
set expandtab
set fileencodings=utf-8,cp1251,koi8-r,cp866
set gdefault
set guifont=DejaVu\ Sans\ Mono:h14
set guioptions=gtc
set guitablabel=%M%t
set helplang=en,ru
set hidden
set history=1000
set ignorecase
set incsearch
set langmenu=en,ru
set laststatus=2
set modelines=0
set mouse=a
set mousemodel=popup
set path=.,/usr/include,,,/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6,/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/plat-darwin,/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/plat-mac,/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/plat-mac/lib-scriptpackages,/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python,/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/lib-tk,/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/lib-old,/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/lib-dynload,/Library/Python/2.6/site-packages,/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/PyObjC,/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/wx-2.8-mac-unicode
set printexpr=system('open\ -a\ Preview\ '.v:fname_in)\ +\ v:shell_error
set ruler
set runtimepath=~/.vim/bundle/nerdtree,~/.vim/bundle/nerdcommenter,~/.vim/bundle/bufexplorer.zip,~/.vim/bundle/python.vim,~/.vim/bundle/taglist.vim,~/.vim/bundle/vim-bundle-sparkup,~/.vim/bundle/django.vim,~/.vim/bundle/python.vim--Vasiliev,~/.vim/bundle/Markdown,~/.vim/bundle/surround.vim,~/.vim/bundle/AutoClose,~/.vim/bundle/snipMate,~/.vim/bundle/pyflakes-pathogen,~/.vim/bundle/Command-T,~/.vim/bundle/vim-repeat,~/.vim/bundle/closetag.vim,~/.vim/bundle/tlib,~/.vim/bundle/sessionman.vim,~/.vim/bundle/tselectbuffer,~/.vim/bundle/FuzzyFinder,~/.vim/bundle/L9,~/.vim/bundle/Jinja,~/.vim,~/.vim/bundle/Session-manager,~/.vim/bundle/less,~/.vim/bundle/sessions.vim,~/.vim/bundle/snippets.vim,/Applications/MacVim.app/Contents/Resources/vim/vimfiles,/Applications/MacVim.app/Contents/Resources/vim/runtime,/Applications/MacVim.app/Contents/Resources/vim/vimfiles/after,~/.vim/after,~/.vim/vundle/,~/.vim/bundle/snippets.vim/after,~/.vim/bundle/Jinja/after,~/.vim/bundle/L9/after,~/.vim/bundle/FuzzyFinder/after,~/.vim/bundle/tselectbuffe
set shiftwidth=4
set showcmd
set showmatch
set smartcase
set smartindent
set smarttab
set softtabstop=4
set statusline=%<\ %n:%F%h%m%r%h%w%y\ %=[%{&fileencoding}][%lx%c:%L]--%P--%0([%{strftime(\"%H:%M\")}]%)
set noswapfile
set tabstop=4
set termencoding=utf-8
set wildignore=*.pyc
set wildmenu
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/hg/tipfydemo
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 ~/hg/tipfydemo/buildout.cfg
badd +5 ~/hg/tipfydemo/app/config.py
badd +1 ~/hg/tipfydemo/app/blog/models.py
badd +26 ~/hg/tipfydemo/app/blog/handlers.py
badd +1 ~/hg/tipfydemo/app/templates/listing.html
badd +30 ~/hg/tipfydemo/app/templates/new_post.html
badd +1 ~/hg/tipfydemo/app/urls.py
silent! argdel *
edit ~/hg/tipfydemo/app/urls.py
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 31 + 54) / 108)
exe 'vert 2resize ' . ((&columns * 76 + 54) / 108)
argglobal
enew
file ~/hg/tipfydemo/app/NERD_tree_1
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal nobuflisted
setlocal buftype=nofile
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,b
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'nerdtree'
setlocal filetype=nerdtree
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal nomodifiable
setlocal nrformats=octal,hex
set number
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'nerdtree'
setlocal syntax=nerdtree
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal winfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
lcd ~/hg/tipfydemo/app/templates
wincmd w
argglobal
noremap <buffer> <silent>  :PyflakesUpdate
noremap <buffer> <silent> dw dw:PyflakesUpdate
noremap <buffer> <silent> dd dd:PyflakesUpdate
noremap <buffer> <silent> u u:PyflakesUpdate
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:XCOMM,n:>,fb:-
setlocal commentstring=#%s
setlocal complete=.,b
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'python'
setlocal filetype=python
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=s*\\(from\\|import\\)
setlocal includeexpr=substitute(v:fname,'\\.','/','g')
setlocal indentexpr=GetPythonIndent(v:lnum)
setlocal indentkeys=0{,0},:,!^F,o,O,e,<:>,=elif,=except
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
set number
setlocal number
setlocal numberwidth=4
setlocal omnifunc=pythoncomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=4
setlocal nospell
setlocal spellcapcheck=
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.py
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'python'
setlocal syntax=python
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
silent! normal! zE
let s:l = 10 - ((9 * winheight(0) + 25) / 50)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
10
normal! 0
lcd ~/hg/tipfydemo/app/templates
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 31 + 54) / 108)
exe 'vert 2resize ' . ((&columns * 76 + 54) / 108)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
